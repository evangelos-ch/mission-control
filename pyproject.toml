[project]
name = "army-knife"
version = "0.0.1"
description = "Army Knife: Utilities for running ML experiments with JAX."
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "Evangelos Chatzaroulas", email = "me@evangelos.ai" }]
keywords = ["python", "machine learning", "experiments", "logging", "jax"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
urls = { repository = "https://github.com/evangelos-ch/army-knife" }
dependencies = [
    "jax==0.4.11",
    "jaxtyping>=0.2.20",
    "optax==0.1.5",
    "chex==0.1.7"
]

[project.optional-dependencies]
wandb = ["wandb==0.15.4", "Pillow==9.5.0", "moviepy==1.0.3", "imageio==2.31.0"]
tensorboard = ["tensorboard==2.13.0", "tensorboardX==2.6", "crc32c==2.3.post0"]
tests = [
    "pytest==7.3.1",
    "pytest-xdist==3.3.1",
    "pytest-cov==4.1.0",
    "pytest-env==0.8.1",
    "beartype==0.14.1",
    "jaxlib==0.4.10",
    "dm-haiku==0.0.9",
    "optax==0.1.5",
    "wandb==0.15.4",
    "Pillow==9.5.0",
    "moviepy==1.0.3",
    "imageio==2.31.0",
    "tensorboardX==2.6"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["army_knife/*.py"]
exclude = ["*_test.py"]

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
ignore = ["F722"]

[tool.ruff.isort]
combine-as-imports = true
section-order = [
    "future",
    "standard-library",
    "ml",
    "jax",
    "dm",
    "third-party",
    "first-party",
    "local-folder"
]

[tool.ruff.isort.sections]
"ml" = ["numpy", "scipy", "sklearn", "pandas"]
"jax" = ["jax", "jaxtyping"]
"dm" = ["haiku", "rlax", "chex", "optax"]

[tool.pytest.ini_options]
# TODO(angel): Far from ideal but can't seem to disable wandb DeprecationWarnings otherwise, and lots of other modules used during testing throw them too...
"filterwarnings" = ["ignore::DeprecationWarning:"]
"addopts" = "--cov=army_knife --cov-report=term-missing:skip-covered --jaxtyping-packages=army_knife,beartype.beartype(conf=beartype.BeartypeConf(strategy=beartype.BeartypeStrategy.On))"
"env" = ["WANDB_MODE=offline"]

[tool.coverage.run]
omit = ["*_test.py"]
